    Checking breadglx v0.0.1 (/home/jtnunley/Programming/Projects/breadglx)
error[E0308]: `match` arms have incompatible types
   --> src/display/mod.rs:400:17
    |
388 |           let map = match self.inner.drawable_properties.get(&drawable).as_deref() {
    |                     -------------------------------------------------------------- `match` arms have incompatible types
389 |               Some(map) => map,
    |                            --- this is found to be of type `&HashMap<u32, u32>`
...
400 | /                 self.inner
401 | |                     .drawable_properties
402 | |                     .get(&drawable)
403 | |                     .expect("Infallible DashMap::get()")
    | |________________________________________________________^ expected reference, found struct `dashmap::mapref::one::Ref`
    |
    = note: expected type `&HashMap<u32, u32>`
             found struct `dashmap::mapref::one::Ref<'_, breadx::Drawable, HashMap<u32, u32>>`

error[E0308]: mismatched types
   --> src/dri/dri3/drawable.rs:651:29
    |
651 |         StateGuard { inner: self.state.lock().await }
    |                             ^^^^^^^^^^^^^^^^^^^^^^^
    |                             |
    |                             expected enum `Option`, found struct `async_lock::MutexGuard`
    |                             help: try using a variant of the expected enum: `Some(self.state.lock().await)`
    |
    = note: expected enum `Option<async_lock::MutexGuard<'_, _>>`
             found struct `async_lock::MutexGuard<'_, _>`

error[E0599]: no method named `get_geometry_immediate_async` found for struct `DisplayLock<'_, Dpy>` in the current scope
    --> src/dri/dri3/drawable.rs:1796:22
     |
1796 |                     .get_geometry_immediate_async(drawable)
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: there is an associated function with a similar name: `get_drawable_geometry_immediate_async`
     | 
    ::: src/display/mod.rs:69:1
     |
69   | pub struct DisplayLock<'a, Dpy> {
     | ------------------------------- method `get_geometry_immediate_async` not found for this

error[E0308]: mismatched types
    --> src/dri/dri3/drawable.rs:1862:21
     |
1862 |                     this1.screen(),
     |                     ^^^^^^^^^^^^^^
     |                     |
     |                     expected reference, found struct `dri::dri3::screen::Dri3Screen`
     |                     help: consider borrowing here: `&this1.screen()`
     |
     = note: expected reference `&dri::dri3::screen::Dri3Screen<_>`
                   found struct `dri::dri3::screen::Dri3Screen<Dpy>`

error[E0609]: no field `createImage` on type `*const __DRIimageExtensionRec`
    --> src/dri/dri3/drawable.rs:3341:44
     |
3341 |                     ThreadSafe::new(((*ie).createImage.expect("createImage not present"))(
     |                                      ------^^^^^^^^^^^
     |                                      |
     |                                      help: `(*ie)` is a raw pointer; try dereferencing it: `(*(*ie)).createImage`

error[E0599]: no method named `into_inner` found for struct `ThreadSafe<_>` in the current scope
    --> src/dri/dri3/drawable.rs:3353:18
     |
3353 |                 .into_inner();
     |                  ^^^^^^^^^^ method not found in `ThreadSafe<_>`
     | 
    ::: src/util/mod.rs:56:1
     |
56   | pub(crate) struct ThreadSafe<T: ?Sized>(T);
     | ------------------------------------------- method `into_inner` not found for this
     |
     = note: `blocking::unblock(move || unsafe {
                                 ThreadSafe::new(((*ie).createImage.expect("createImage not present"))(
                                     screen2.dri_screen().as_ptr(),
                                     width as _,
                                     height as _,
                                     format as _,
                                     ffi::__DRI_IMAGE_USE_SHARE
                                         | ffi::__DRI_IMAGE_USE_SCANOUT
                                         | ffi::__DRI_IMAGE_USE_BACKBUFFER,
                                     buffer2.as_ptr() as *const _ as *mut _,
                                 ))
                             })
                             .await` is a function, perhaps you wish to call it
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `into_inner`, perhaps you need to implement it:
             candidate #1: `std::sys_common::IntoInner`

error[E0599]: no method named `into_inner` found for struct `dri::dri3::screen::Dri3Screen<Dpy>` in the current scope
    --> src/dri/dri3/drawable.rs:3366:44
     |
3366 |                 ThreadSafe::new(((*screen2.into_inner())
     |                                            ^^^^^^^^^^ method not found in `dri::dri3::screen::Dri3Screen<Dpy>`
     | 
    ::: src/dri/dri3/screen.rs:38:1
     |
38   | pub struct Dri3Screen<Dpy> {
     | -------------------------- method `into_inner` not found for this
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `into_inner`, perhaps you need to implement it:
             candidate #1: `std::sys_common::IntoInner`

error[E0599]: no method named `into_inner` found for struct `ThreadSafe<_>` in the current scope
    --> src/dri/dri3/drawable.rs:3378:14
     |
3378 |             .into_inner();
     |              ^^^^^^^^^^ method not found in `ThreadSafe<_>`
     | 
    ::: src/util/mod.rs:56:1
     |
56   | pub(crate) struct ThreadSafe<T: ?Sized>(T);
     | ------------------------------------------- method `into_inner` not found for this
     |
     = note: `blocking::unblock(move || unsafe {
                             ThreadSafe::new(((*screen2.into_inner())
                                 .createImage
                                 .expect("createImage not present"))(
                                 screen2.dri_screen().as_ptr(),
                                 width as _,
                                 height as _,
                                 format as _,
                                 0,
                                 buffer2.as_ptr() as *const _ as *mut _,
                             ))
                         })
                         .await` is a function, perhaps you wish to call it
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `into_inner`, perhaps you need to implement it:
             candidate #1: `std::sys_common::IntoInner`

error[E0609]: no field `image_ext` on type `dri::dri3::screen::Dri3Screen<Dpy>`
    --> src/dri/dri3/drawable.rs:3386:44
     |
3386 |                 ThreadSafe::new(((*screen3.image_ext)
     |                                            ^^^^^^^^^ unknown field
     |
     = note: available fields are: `inner`

error[E0599]: no method named `into_inner` found for struct `ThreadSafe<_>` in the current scope
    --> src/dri/dri3/drawable.rs:3400:14
     |
3400 |             .into_inner();
     |              ^^^^^^^^^^ method not found in `ThreadSafe<_>`
     | 
    ::: src/util/mod.rs:56:1
     |
56   | pub(crate) struct ThreadSafe<T: ?Sized>(T);
     | ------------------------------------------- method `into_inner` not found for this
     |
     = note: `blocking::unblock(move || unsafe {
                             ThreadSafe::new(((*screen3.image_ext)
                                 .createImage
                                 .expect("createImage not present"))(
                                 screen3.dri_screen().as_ptr(),
                                 width as _,
                                 height as _,
                                 linear_format(&mut *conn, format as _) as _,
                                 ffi::__DRI_IMAGE_USE_SHARE
                                     | ffi::__DRI_IMAGE_USE_LINEAR
                                     | ffi::__DRI_IMAGE_USE_BACKBUFFER,
                                 buffer3.as_ptr() as *const _ as *mut _,
                             ))
                         })
                         .await` is a function, perhaps you wish to call it
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `into_inner`, perhaps you need to implement it:
             candidate #1: `std::sys_common::IntoInner`

error[E0609]: no field `image_ext` on type `std::sync::Arc<Dri3ScreenInner<Dpy>>`
    --> src/dri/dri3/drawable.rs:3407:41
     |
3407 |                         ((*screen.inner.image_ext).destroyImage.unwrap())(
     |                                         ^^^^^^^^^ unknown field

error[E0599]: no method named `into_inner` found for struct `ThreadSafe<_>` in the current scope
    --> src/dri/dri3/drawable.rs:3425:46
     |
3425 |                 unsafe { destroy_image(image.into_inner().as_ptr()) };
     |                                              ^^^^^^^^^^ method not found in `ThreadSafe<_>`
     | 
    ::: src/util/mod.rs:56:1
     |
56   | pub(crate) struct ThreadSafe<T: ?Sized>(T);
     | ------------------------------------------- method `into_inner` not found for this
     |
     = note: `image` is a function, perhaps you wish to call it
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `into_inner`, perhaps you need to implement it:
             candidate #1: `std::sys_common::IntoInner`

error[E0599]: no method named `into_inner` found for struct `ThreadSafe<_>` in the current scope
    --> src/dri/dri3/drawable.rs:3426:60
     |
3426 |                 if let Some(linear_buffer) = linear_buffer.into_inner() {
     |                                                            ^^^^^^^^^^ method not found in `ThreadSafe<_>`
     | 
    ::: src/util/mod.rs:56:1
     |
56   | pub(crate) struct ThreadSafe<T: ?Sized>(T);
     | ------------------------------------------- method `into_inner` not found for this
     |
     = note: `linear_buffer` is a function, perhaps you wish to call it
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `into_inner`, perhaps you need to implement it:
             candidate #1: `std::sys_common::IntoInner`

error[E0599]: no method named `into_inner` found for struct `ThreadSafe<_>` in the current scope
    --> src/dri/dri3/drawable.rs:3438:24
     |
3438 |                     pb.into_inner().as_ptr(),
     |                        ^^^^^^^^^^ method not found in `ThreadSafe<_>`
     | 
    ::: src/util/mod.rs:56:1
     |
56   | pub(crate) struct ThreadSafe<T: ?Sized>(T);
     | ------------------------------------------- method `into_inner` not found for this
     |
     = note: `pb` is a function, perhaps you wish to call it
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `into_inner`, perhaps you need to implement it:
             candidate #1: `std::sys_common::IntoInner`

error[E0599]: no method named `into_inner` found for struct `ThreadSafe<_>` in the current scope
    --> src/dri/dri3/drawable.rs:3466:24
     |
3466 |                     pb.into_inner().as_ptr(),
     |                        ^^^^^^^^^^ method not found in `ThreadSafe<_>`
     | 
    ::: src/util/mod.rs:56:1
     |
56   | pub(crate) struct ThreadSafe<T: ?Sized>(T);
     | ------------------------------------------- method `into_inner` not found for this
     |
     = note: `pb` is a function, perhaps you wish to call it
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `into_inner`, perhaps you need to implement it:
             candidate #1: `std::sys_common::IntoInner`

error: future cannot be sent between threads safely
    --> src/dri/dri3/drawable.rs:2402:13
     |
2402 | /             Box::pin(async move {
2403 | |                 let mut new_buffer = Dri3Buffer::new_async(
2404 | |                     self,
2405 | |                     format,
...    |
2503 | |                 Ok(new_buffer)
2504 | |             })
     | |______________^ future created by async block is not `Send`
     |
     = help: within `impl Future`, the trait `Send` is not implemented for `NonNull<__DRIimageRec>`
note: future is not `Send` as this value is used across an await
    --> src/dri/dri3/drawable.rs:2423:24
     |
2423 |                       if self
     |  ________________________^
2424 | |                         .blit_images_async(
2425 | |                             ImgPtr(new_buffer.image),
2426 | |                             ImgPtr(buffer.image),
...    |
2434 | |                         )
2435 | |                         .await
     | |______________________________^ first, await occurs here, with `new_buffer.image` maybe used later...
note: `new_buffer.image` is later dropped here
    --> src/dri/dri3/drawable.rs:2437:57
     |
2425 |                             ImgPtr(new_buffer.image),
     |                                    ---------------- has type `NonNull<__DRIimageRec>` which is not `Send`
...
2437 |                         && buffer.linear_buffer.is_none()
     |                                                         ^
     = note: required for the cast to the object type `dyn Future<Output = std::result::Result<std::sync::Arc<Dri3Buffer>, BreadError>> + Send`

error: future cannot be sent between threads safely
    --> src/dri/dri3/drawable.rs:2402:13
     |
2402 | /             Box::pin(async move {
2403 | |                 let mut new_buffer = Dri3Buffer::new_async(
2404 | |                     self,
2405 | |                     format,
...    |
2503 | |                 Ok(new_buffer)
2504 | |             })
     | |______________^ future created by async block is not `Send`
     |
     = help: within `impl Future`, the trait `Send` is not implemented for `NonNull<c_void>`
note: future is not `Send` as this value is used across an await
    --> src/dri/dri3/drawable.rs:2439:25
     |
2439 |                         reset_fence_async(unsafe { ThreadSafe::new(new_buffer.shm_fence) }).await;
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ first, await occurs here, with `new_buffer.shm_fence` maybe used later...
note: `new_buffer.shm_fence` is later dropped here
    --> src/dri/dri3/drawable.rs:2439:98
     |
2439 |                         reset_fence_async(unsafe { ThreadSafe::new(new_buffer.shm_fence) }).await;
     |                                                                    --------------------          ^
     |                                                                    |
     |                                                                    has type `NonNull<c_void>` which is not `Send`
     = note: required for the cast to the object type `dyn Future<Output = std::result::Result<std::sync::Arc<Dri3Buffer>, BreadError>> + Send`

error: future cannot be sent between threads safely
    --> src/dri/dri3/drawable.rs:2402:13
     |
2402 | /             Box::pin(async move {
2403 | |                 let mut new_buffer = Dri3Buffer::new_async(
2404 | |                     self,
2405 | |                     format,
...    |
2503 | |                 Ok(new_buffer)
2504 | |             })
     | |______________^ future created by async block is not `Send`
     |
     = help: within `impl Future`, the trait `Send` is not implemented for `NonNull<__DRIcontextRec>`
note: future is not `Send` as this value is used across an await
    --> src/dri/dri3/drawable.rs:2084:9
     |
2069 |           let (dri_context, _guard) = if self.context.is_current_async().await {
     |                ----------- has type `NonNull<__DRIcontextRec>` which is not `Send`
...
2084 | /         blocking::unblock(move || unsafe {
2085 | |             ((*screen.inner.image)
2086 | |                 .blitImage
2087 | |                 .expect("BlitImage not present"))(
...    |
2101 | |         })
2102 | |         .await;
     | |______________^ await occurs here, with `dri_context` maybe used later
2103 |           Ok(())
2104 |       }
     |       - `dri_context` is later dropped here
     = note: required for the cast to the object type `dyn Future<Output = std::result::Result<std::sync::Arc<Dri3Buffer>, BreadError>> + Send`

error[E0061]: this function takes 6 arguments but 5 arguments were supplied
    --> src/dri/dri3/screen.rs:524:25
     |
524  |                 let d = Dri3Drawable::new_async(
     |                         ^^^^^^^^^^^^^^^^^^^^^^^ expected 6 arguments
525  |                     &dpy,
     |                     ----
526  |                     drawable,
     |                     --------
527  |                     self.clone(),
     |                     ------------
528  |                     context.clone(),
     |                     ---------------
529  |                     fbconfig.clone(),
     |                     ---------------- supplied 5 arguments
     |
note: associated function defined here
    --> src/dri/dri3/drawable.rs:1779:18
     |
1779 |     pub async fn new_async(
     |                  ^^^^^^^^^
1780 |         dpy: &GlDisplay<Dpy>,
     |         --------------------
1781 |         drawable: Drawable,
     |         ------------------
1782 |         screen: Dri3Screen<Dpy>,
     |         -----------------------
1783 |         context: Dri3Context<Dpy>,
     |         -------------------------
1784 |         config: GlConfig,
     |         ----------------
1785 |         multiplanes_available: bool,
     |         ---------------------------

error: future cannot be sent between threads safely
    --> src/dri/dri3/loader_extensions.rs:152:26
     |
152  |         future::block_on(offload::spawn(async move {
     |                          ^^^^^^^^^^^^^^ future created by async block is not `Send`
     | 
    ::: src/offload.rs:65:15
     |
65   | pub(crate) fn spawn<T: Send + 'static>(
     |               ----- required by a bound in this
66   |     future: impl Future<Output = T> + Send + 'static,
     |                                       ---- required by this bound in `offload::spawn`
     |
     = help: within `impl Future`, the trait `Send` is not implemented for `NonNull<__DRIimageRec>`
note: future is not `Send` as this value is used across an await
    --> src/dri/dri3/drawable.rs:2551:13
     |
2551 | /             self.blit_images_async(
2552 | |                 ImgPtr(buffer.image),
2553 | |                 ImgPtr(
2554 | |                     state.buffers[state.cur_blit_source as usize]
...    |
2566 | |             )
2567 | |             .await?;
     | |__________________^ first, await occurs here, with `buffer.image` maybe used later...
note: `buffer.image` is later dropped here
    --> src/dri/dri3/drawable.rs:2567:20
     |
2552 |                 ImgPtr(buffer.image),
     |                        ------------ has type `NonNull<__DRIimageRec>` which is not `Send`
...
2567 |             .await?;
     |                    ^

error: future cannot be sent between threads safely
    --> src/dri/dri3/loader_extensions.rs:152:26
     |
152  |         future::block_on(offload::spawn(async move {
     |                          ^^^^^^^^^^^^^^ future created by async block is not `Send`
     | 
    ::: src/offload.rs:65:15
     |
65   | pub(crate) fn spawn<T: Send + 'static>(
     |               ----- required by a bound in this
66   |     future: impl Future<Output = T> + Send + 'static,
     |                                       ---- required by this bound in `offload::spawn`
     |
     = help: within `impl Future`, the trait `Send` is not implemented for `NonNull<__DRIcontextRec>`
note: future is not `Send` as this value is used across an await
    --> src/dri/dri3/drawable.rs:2084:9
     |
2069 |           let (dri_context, _guard) = if self.context.is_current_async().await {
     |                ----------- has type `NonNull<__DRIcontextRec>` which is not `Send`
...
2084 | /         blocking::unblock(move || unsafe {
2085 | |             ((*screen.inner.image)
2086 | |                 .blitImage
2087 | |                 .expect("BlitImage not present"))(
...    |
2101 | |         })
2102 | |         .await;
     | |______________^ await occurs here, with `dri_context` maybe used later
2103 |           Ok(())
2104 |       }
     |       - `dri_context` is later dropped here

error: aborting due to 21 previous errors

Some errors have detailed explanations: E0061, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `breadglx`

To learn more, run the command again with --verbose.
